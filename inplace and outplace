

//Insertion Sort Using In-Place Algorithm
#include <iostream>
using namespace std;
//Creating Insertion Sort void function
void Inplace_insertionSort(int arr[],int n){
    //Initialising variables i and j
    int i=0,j=i+1;
    while(j<=n-1){
        int temp=arr[j];
        while(i>=0){
            if(arr[i]>temp){
                arr[i+1]=arr[i];
                i--;
            }
            if(i==-1){
                arr[0]=temp;
                break;
            }
            if(arr[i]<=temp){
                arr[i+1]=temp;
                break;
            }
        }
        j++;
        i=j-1;
    }
    return;
}

//Insertion Sort Using Out-Place Algorithm
void Outplace_insertionSort(int arr[],int si,int ei){
    //si=starting index
    //ei=ending index
    if(si==ei){return;}
    int j=si+1;
    int temp=arr[j];
    while(si>=0){
        if(arr[si]>temp){
            arr[si+1]=arr[si];
            si--;
        }
        if(si==-1){
            arr[0]=temp;
            break;
        }
        if(arr[si]<=temp){
            arr[si+1]=temp;
            break;
        }
    }
    Outplace_insertionSort(arr,si+1,ei);
}

// Function to print the array.
void print_arr(int* arr, int n){
    for (int i = 0; i< n; i++){
        cout << arr[i] << " ";
    }
}

int main(){
    cout << "Answer1 and Answer 3 are written as a commented part in code." << endl << endl;
    int n;
    //Taking Input array
    cout<<"Total nunber of elements in the array: ";
    cin>>n;

    int arr[n],arr2[n];//Two array with same size and elements

    cout<<"Enter n elements of the array: ";
    for(int i=0;i<n;i++){
        int tmp;
        cin >> tmp;
        arr[i] = tmp;
        arr2[i] = tmp;
    }

    cout<<endl;

    cout<<"ARRAY BEFORE SORTING : ";print_arr(arr,n);

    //Calling insertion sort using in-place algorithm.
    Inplace_insertionSort(arr,n);
    cout<<endl;
    cout<<"ARRAY AFTER SORTING USING IN-PLACE ALGORITHM : ";
    //printing the array
    print_arr(arr,n);
    cout<<endl;

    //calling insertiong sort using out-place algorithm.
    Outplace_insertionSort(arr2,0,n-1);
    cout<<"ARRAY AFTER SORTING USING OUT-PLACE ALGORITHM : ";
    //printing the array
    print_arr(arr,n);
    cout<<endl;

}

